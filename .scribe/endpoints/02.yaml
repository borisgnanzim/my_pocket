name: Entries
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/entries
    metadata:
      groupName: Entries
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields:
      id:
        name: id
        description: 'The ID of the entry'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/entries
    metadata:
      groupName: Entries
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: ''
        required: true
        example: income
        type: string
        enumValues:
          - income
          - expense
        exampleWasSpecified: false
        nullable: false
        custom: []
      amount:
        name: amount
        description: 'Must be at least 0.'
        required: true
        example: 27
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'Et animi quos velit et fugiat.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: true
        example: '2025-07-08T19:06:20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      origin:
        name: origin
        description: 'This field is required when <code>type</code> is <code>income</code>.'
        required: false
        example: other
        type: string
        enumValues:
          - salary
          - investment
          - gift
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
      category:
        name: category
        description: 'This field is required when <code>type</code> is <code>expense</code>.'
        required: false
        example: health
        type: string
        enumValues:
          - food
          - transport
          - entertainment
          - bills
          - health
          - clothing
          - education
          - other
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      type: income
      amount: 27
      description: 'Et animi quos velit et fugiat.'
      date: '2025-07-08T19:06:20'
      origin: other
      category: health
    fileParameters: []
    responses: []
    responseFields:
      id:
        name: id
        description: 'The ID of the entry'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/entries/incomes
    metadata:
      groupName: Entries
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields:
      id:
        name: id
        description: 'The ID of the entry'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/entries/expenses
    metadata:
      groupName: Entries
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields:
      id:
        name: id
        description: 'The ID of the entry'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/entries/{id}'
    metadata:
      groupName: Entries
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entry.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields:
      id:
        name: id
        description: 'The ID of the entry'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/entries/{id}'
    metadata:
      groupName: Entries
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entry.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields:
      id:
        name: id
        description: 'The ID of the entry'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/entries/{id}'
    metadata:
      groupName: Entries
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entry.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields:
      id:
        name: id
        description: 'The ID of the entry'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
